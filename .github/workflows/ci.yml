name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]        
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Load dependencies
      run: npm ci

    - name: Lint source code
      run: npm run lint
      
    - name: Lint Dockerfile
      run: docker run --rm -i hadolint/hadolint < Dockerfile

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Scan for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    needs:
      - unit-test
      - lint
      - security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: docker build . --label "maintainer=Koenighotze" --label "version=${GITHUB_SHA}" --tag ${GITHUB_REPOSITORY}:${GITHUB_SHA} --tag ${GITHUB_REPOSITORY}:latest

      - name: Push image
        if: github.ref == 'refs/heads/main'
        run: | 
          docker push ${GITHUB_REPOSITORY}:${GITHUB_SHA}  
          docker push ${GITHUB_REPOSITORY}:latest

    
      